package com.ict.edu;

/*
[자료형]

- 데이터를 저장하고 출력하는 방법
	1) 선언
	- [자료형] [이름] ;
	- 선언은 처음 한 번만 진행
	2) 데이터 저장
	- [이름] = 데이터;
	3) 출력
	- System.out.print(): 그대로 출력
	- System.out.println(): 출력 후 줄바꿈
	
- 자료형의 종류
1) 논리형: boolean
2) 문자형: char
3) 정수형: byte < short < int < long
4) 실수형: float < double
	 >>> 크기: byte < short < char < int < long <float < double

- 형변환
1) 자동 형변환: 자기보다 크기가 큰 자료형으로 저장
2) 강제 형변환: 강제로 자료형을 변경하여 오류를 방지
		  [자료형] [이름] = ([자료형])([데이터]);
-------------------------------------------------------------------------------------------------------
[연산자]

- 산술 연산자: +  -  *  /  % 
- 증감 연산자: i++  --i
- 비교 연산자: >  <  >=  <=  ==  !=										>>> 무조건 boolean형으로 도출
- 논리 연산자: &&(AND)  ||(OR)  !(NOT)		>							>>> 조건식에서 사용
- 대입 연산자: =  +=  -=  *=  /=  %=
- 삼항 연산자: [자료형] [이름] = [조건식] ? [참인경우] : [거짓인경우]	>>> 중첩하여 사용하기도 함
-------------------------------------------------------------------------------------------------------
[제어문]
- if(조건식) { }
- if(조건식) { } else { }
- if(조건식) { } else if(조건식) { } else { }
- switch(인자값) { case '인자': break; case '인자': break; }
- for(초기식; 조건식; 증감식) { }
- while(조건식) { 실행문장; 증감식; }
- while(true) { if(빠져나갈 조건) break; 조건식이 참일 때 실행 문장; 증감식; }
- do { 실행문; 증감식; } while(조건식);

- break: 현재 위치의 블록을 탈출할 때 사용하는 예약어
- continue: 이하에 있는 수행문을 포기하고, 다음 회차로 진행하는 예약어
- break와 continue는 사용 시 레이블 이름을 지정하여 특정 위치로 이동하는 것이 가능
-------------------------------------------------------------------------------------------------------
[클래스]
- Scanner 클래스: 키보드에서 정보를 입력 받아 처리하는 클래스
				  Scanner sc = new Scanner(System.in);





*/

public class summary {

}
